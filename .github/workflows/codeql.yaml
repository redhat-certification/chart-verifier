# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '29 6 * * 6'

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    if: github.repository == 'redhat-certification/chart-verifier'
    permissions:
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: actions
          build-mode: none
        - language: go
          build-mode: manual
        - language: python
          build-mode: none
    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    # Add any setup steps before running the `github/codeql-action/init` action.
    # This includes steps like installing compilers or runtimes (`actions/setup-node`
    # or others). This is typically only required for manual builds.
    # - name: Setup runtime (example)
    #   uses: actions/setup-example@v1

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
    - name: Run manual build steps
      if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        make bin

    - name: Perform CodeQL Analysis
      id: codeql-analysis
      uses: github/codeql-action/analyze@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
      with:
        category: "/language:${{matrix.language}}"

    - name: Send message to helm_dev slack channel
      id: notify_dev
      if: ${{ always() &&  github.event_name == 'schedule' && steps.codeql-analysis.conclusion != 'success' }}
      uses: archive/github-actions-slack@c643e5093620d65506466f2c9b317d5d29a5e517 # v2.10.1
      with:
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
        slack-channel: C02979BDUPL
        slack-text: Failure! CodeQL analysis (${{ matrix.language }}) for chart verifier. See '${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}'

    - name: Result from "Send Message to helm_dev slack channel"
      if: ${{ always() &&  github.event_name == 'schedule' && steps.codeql-analysis.conclusion != 'success' }}
      env:
        SLACK_RESULT: ${{ steps.notify_dev.outputs.slack-result }}
      run: echo "The result was ${SLACK_RESULT}"

    - name: Send message to helm_notify slack channel
      id: notify
      if: ${{ always() &&  github.event_name == 'schedule' && steps.codeql-analysis.conclusion == 'success' }}
      uses: archive/github-actions-slack@c643e5093620d65506466f2c9b317d5d29a5e517 # v2.10.1
      with:
        slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
        slack-channel: C04K1ARMH8A
        slack-text: Success! CodeQL analysis (${{ matrix.language }}) for chart verifier. See '${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}'

    - name: Result from "Send Message to helm_notify slack channel"
      if: ${{ always() &&  github.event_name == 'schedule' && steps.codeql-analysis.conclusion == 'success' }}
      env:
        SLACK_RESULT: ${{ steps.notify.outputs.slack-result }}
      run: echo "The result was ${SLACK_RESULT}"
